类里的普通函数可以不定义，因为只要你不用就行；但是虚函数必须定义，因为编译器不确定你运行时用了没有，所以强制定义
class A
{
public:
	virtual void f();
};   //vs又没错也是醉了

----动态绑定-----
只有通过指针或引用调用时，才会动态绑定，这种情况下动态类型和静态类型还会不同；
A a;
B b;
A *ap=&a;
B *bp=&b;

A *ap=&b;  //左边是静态类型，右边是动态类型
-----override----
派生类里定义时加上可以检查虚函数是否能覆盖基类的，不能覆盖就报错
------final----
基类定义时加上让派生类动不了


----实在想调用基类的虚函数咋办？-----
派生类里会覆盖基类的虚函数，这时想调用就得用作用域运算符
double undiscounted=ap->A::func();
