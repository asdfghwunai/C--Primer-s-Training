友元不是成员，所以不受控制级别(private,public,protected)的限制

友元函数也可以定义在类里面，这是隐式内联，但是外部也要声明，这是必须的


友元不具有传递性，就是
class A
{
  friend class B;
}

class B
{
  friend class C;
} 
C不是A的友元类

类的成员函数作为友元，有一个声明和定义顺序：
比如A是目标类，B里的成员函数要作为A的友元
1.声明A类（不完全类）
class A；
2.定义B类，但是那个友元成员函数先不定义
class B
{
  。。。。  //函数声明
}；
3.定义A类所有
class A
{
  。。。。  //友元声明
}；
4.定义B类的作为友元的成员函数
函数定义
{

}

类和普通函数不必须在友元声明前声明



